    //:#_BITMAP_SCANNING_RECTANGLES_#:[630]:-----------------:// // [630]
    {                                                            // [630]
        //:DEV_NOTE[ $_USED_DOR_ENUMS_INSTEAD_$  ]:::::::://     // [630]
        //:DEV_NOTE[ $_USED_DOOR_ENUMS_INSTEAD_$ ]:::::::://     // [630]
                                                                 // [630]
        //:#_EDGE_TO_DOOR_BODY_#:[630]:------------------://     // [630]
                                                                 // [630]
            var d_file196_ee4_dor =( new Int8Array([             // [630]
            //:          @ee4_dor@ : (EdgeEnum)===>(DoorRect):// // [630]
                                                                 // [630]
                do1_x_0 , do1_x_1 , do1_y_0 , do1_y_1            // [630]
            ,   do2_x_0 , do2_x_1 , do2_y_0 , do2_y_1            // [630]
            ,   do3_x_0 , do3_x_1 , do3_y_0 , do3_y_1            // [630]
            ,   do4_x_0 , do4_x_1 , do4_y_0 , do4_y_1            // [630]
            ]));;                                                // [630]
                                                                 // [630]
        //:------------------:#_EDGE_TO_DOOR_BODY_#:[630]://     // [630]
        //:#_RECTMAG_SMOKE_TEST_#:[630]:-----------------://     // [630]
        {                                                        // [630]
            const ee4_dor =( d_file196_ee4_dor );                // [630]
            const num_col =( 4 /**4 columns per record **/);     // [630]
                               /**NOT "4" from "ee4"   **/       // [630]
                                                                 // [630]
            let rba ; //: @rba@ : Record_Base_Address :::://     // [630]
                                                                 // [630]
            let top , bot ;  //: EdgeMarkers : Y-Axis :::://     // [630]
            let lef , rig ;  //: EdgeMarkers : X-Axis :::://     // [630]
            let wid ; //:Width In Pixels Of DoorRectangle://     // [630]
            let hig ; //:HeightIn Pixels Of DoorRectangle://     // [630]
            let exp_wid ; //: Expected Width ::::::::::::://     // [630]
            let exp_hig ; //: Expected Height :::::::::::://     // [630]
                                                                 // [630]
            let ee4 ; //:@ee4@ : EdgeEnumeration(4 edges)://     // [630]
                                                                 // [630]
            for(ee4 = 0 ; ee4 <= (4-1) ; ee4 ++ ){               // [630]
                                                                 // [630]
                rba =( ee4 * num_col ); //:RecordBaseAddr://     // [630]
                                                                 // [630]
                lef =ee4_dor[ rba + c_dor_lef ]; //: x_0 ://     // [630]
                rig =ee4_dor[ rba + c_dor_rig ]; //: x_1 ://     // [630]
                top =ee4_dor[ rba + c_dor_top ]; //: y_0 ://     // [630]
                bot =ee4_dor[ rba + c_dor_bot ]; //: y_1 ://     // [630]
                                                                 // [630]
                wid =( rig - lef + 1 );                          // [630]
                hig =( bot - top + 1 );                          // [630]
                                                                 // [630]
                ASS( wid >= 1 , "[NON_POS_DOOR_WIDTH_]" );       // [630]
                ASS( hig >= 1 , "[NON_POS_DOOR_HEIGHT]" );       // [630]
                                                                 // [630]
                if( c_ee4_top === ee4 /** 0 **/                  // [630]
                ||  c_ee4_bot === ee4 /** 2 **/                  // [630]
                ){                                               // [630]
                    exp_wid =( 10 );                             // [630]
                    exp_hig =(  4 );                             // [630]
                }else                                            // [630]
                if( c_ee4_rig === ee4 /** 1 **/                  // [630]
                ||  c_ee4_lef === ee4 /** 3 **/                  // [630]
                ){                                               // [630]
                    exp_wid =(  4 );                             // [630]
                    exp_hig =( 10 );                             // [630]
                }else{                                           // [630]
                    ERR( "[NO_EE4_I_EVER_HEARD_OF]" );           // [630]
                };;                                              // [630]
                                                                 // [630]
                if( exp_wid != wid ){                            // [630]
                    ERR("[DOOR_IS_WRONG_WIDTH_]");               // [630]
                }else                                            // [630]
                if( exp_hig != hig ){                            // [630]
                    ERR("[DOOR_IS_WRONG_HEIGHT]");               // [630]
                };;                                              // [630]
                                                                 // [630]
            };; //:NEXT[ ee4 ]::::::::::::::::::::::[630]://     // [630]
        }                                                        // [630]
        //:-----------------:#_RECTMAG_SMOKE_TEST_#:[630]://     // [630]
    }                                                            // [630]
    //:-----------------:#_BITMAP_SCANNING_RECTANGLES_#:[630]:// // [630]


    #_BITMAP_SCANNING_RECTANGLES_# :--------------------------+  // [630]
                                                              |  // [630]
        There are four rectangles on each respective          |  // [630]
        edge of a level design on the rgba196 bitmap.         |  // [630]
                                                              |  // [630]
        We need to scan every pixel within those              |  // [630]
        rectangles to determine if we need to                 |  // [630]
        draw a :                                              |  // [630]
            1. MICROLEVEL_TUNNEL                              |  // [630]
            OR                                                |  // [630]
            2. MICROLEVEL_BLOCKADE                            |  // [630]
              (MICROLEVEL_BARRACADE)                          |  // [630]
                                                              |  // [630]
    :---------------------------------------------------------+  // [630]
    $_USED_DOOR_ENUMS_INSTEAD_$ :-----------------------------+  // [630]
    $_USED_DOR_ENUMS_INSTEAD_$ :------------------------------+  // [630]
                                                              |  // [630]
        Decided to use the "Door Enums" instead.              |  // [630]
                                                              |  // [630]
        SEE[ _EDGE_TO_DOOR_BODY_ ]                            |  // [630]
                                                              |  // [630]
        //: TAG[ x_0 convention | x-convention ]:::::::::://  |  // [630]
        //: TAG[ x_0 convention | x-convention ]:::::::::://  |  // [630]
        //: TAG[ y_0 convention | y-convention ]:::::::::://  |  // [630]
        //: TAG[ y_0 convention | y-convention ]:::::::::://  |  // [630]
        //: @@rel_x_0@ : DexOfMember : RelativeEdge:x_0  ://  |  // [630]
        //: @@rel_x_1@ : DexOfMember : RelativeEdge:x_1  ://  |  // [630]
        //: @@rel_y_0@ : DexOfMember : RelativeEdge:y_0  ://  |  // [630]
        //: @@rel_y_1@ : DexOfMember : RelativeEdge:y_1  ://  |  // [630]
        const rel_x_0 =( x_0 ); ASS( 0 === x_0 , "[X_0]" );   |  // [630]
        const rel_x_1 =( x_1 ); ASS( 1 === x_1 , "[X_1]" );   |  // [630]
        const rel_y_0 =( y_0 ); ASS( 2 === y_0 , "[Y_0]" );   |  // [630]
        const rel_y_1 =( y_1 ); ASS( 3 === y_1 , "[Y_1]" );   |  // [630]
                                                              |  // [630]
    :-----------------------------: $_USED_DOOR_ENUMS_INSTEAD_$  // [630]
    :------------------------------: $_USED_DOR_ENUMS_INSTEAD_$  // [630]
    #_EDGE_TO_DOOR_BODY_# :-----------------------------------+  // [630]
                                                              |  // [630]
        Take an edge enumeration ( ee4 ) and convert          |  // [630]
        it to the inclusive pixel bounds of where the         |  // [630]
        "door body" for that edge is.                         |  // [630]
                                                              |  // [630]
        The door body is :                                    |  // [630]
                                                              |  // [630]
            1. Relative to the top-left-central-pixel         |  // [630]
               of any room within RGBA196.                    |  // [630]
                                                              |  // [630]
            2. The DOOR PIXELS itself, not the frame.         |  // [630]
               It is the region of solid white pixels         |  // [630]
               inset within the grey pixel frame.             |  // [630]
                                                              |  // [630]
        @do1_x_0@ , @do1_x_1@ , @do1_y_0@ , @do1_y_1@         |  // [630]
        @do2_x_0@ , @do2_x_1@ , @do2_y_0@ , @do2_y_1@         |  // [630]
        @do3_x_0@ , @do3_x_1@ , @do3_y_0@ , @do3_y_1@         |  // [630]
        @do4_x_0@ , @do4_x_1@ , @do4_y_0@ , @do4_y_1@         |  // [630]
                                                              |  // [630]
        @do1@ : room DOor #1 ( 1 == top door , [NUMCLOCK])    |  // [630]
        @do2@ : room DOor #2 ( 2 == rig door , [NUMCLOCK])    |  // [630]
        @do3@ : room DOor #3 ( 3 == bot door , [NUMCLOCK])    |  // [630]
        @do4@ : room DOor #4 ( 4 == lef door , [NUMCLOCK])    |  // [630]
                                                              |  // [630]
        @NUMCLOCK@ : Numbered_Clockwise                       |  // [630]
                                                              |  // [630]
        @do1_x_0 : room DOor 1 : lef(x_0)bound.               |  // [630]
        @do1_x_1 : room DOor 1 : rig(x_1)bound.               |  // [630]
        @do1_y_0 : room DOor 1 : top(y_0)bound.               |  // [630]
        @do1_y_1 : room DOor 1 : bot(y_1)bound.               |  // [630]
                                                              |  // [630]
        @do2_x_0 : room DOor 2 : lef(x_0)bound.               |  // [630]
        @do2_x_1 : room DOor 2 : rig(x_1)bound.               |  // [630]
        @do2_y_0 : room DOor 2 : top(y_0)bound.               |  // [630]
        @do2_y_1 : room DOor 2 : bot(y_1)bound.               |  // [630]
                                                              |  // [630]
        @do3_x_0 : room DOor 3 : lef(x_0)bound.               |  // [630]
        @do3_x_1 : room DOor 3 : rig(x_1)bound.               |  // [630]
        @do3_y_0 : room DOor 3 : top(y_0)bound.               |  // [630]
        @do3_y_1 : room DOor 3 : bot(y_1)bound.               |  // [630]
                                                              |  // [630]
        @do4_x_0 : room DOor 3 : lef(x_0)bound.               |  // [630]
        @do4_x_1 : room DOor 3 : rig(x_1)bound.               |  // [630]
        @do4_y_0 : room DOor 3 : top(y_0)bound.               |  // [630]
        @do4_y_1 : room DOor 3 : bot(y_1)bound.               |  // [630]
                                                              |  // [630]
    :-----------------------------------: #_EDGE_TO_DOOR_BODY_#  // [630]
    #_RECTMAG_SMOKE_TEST_# :----------------------------------+  // [630]
                                                              |  // [630]
        Rectangle Magnitude Smoke Test.                       |  // [630]
        All 4 rectangles should have the                      |  // [630]
        same magnitude, though don't forget                   |  // [630]
        that each rectangle is rotated by 90                  |  // [630]
        degrees.                                              |  // [630]
                                                              |  // [630]
    :----------------------------------: #_RECTMAG_SMOKE_TEST_#  // [630]