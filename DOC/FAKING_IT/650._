                    //:#_CREATE_JOSH_PIXEL_#:[650]:------://     // [650]
                    const dopix_a =( d_file196_doorpix );        // [650]
                                                                 // [650]
                    let dopix_u =(( 0x00 ///////////////////     // [650]
                    |  (dopix_a[ dopix_c+0 ])<<(24)              // [650]
                    |  (dopix_a[ dopix_c+1 ])<<(16)              // [650]
                    |  (dopix_a[ dopix_c+2 ])<<( 8)              // [650]
                    |  (dopix_a[ dopix_c+3 ])<<( 0)              // [650]
                    )>>>0);;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     // [650]
                                                                 // [650]
                    const te7=( 0 /** 1X Tile Size   **/ );;     // [650]
                    let   la3=( 0-69 /**geobomfad:012**/ );;     // [650]
                                                                 // [650]
                    //:------:#_CREATE_JOSH_PIXEL_#:[650]://     // [650]
                    //:#_DECODE_JOSH_PIXEL_#:[650]:------://     // [650]
                    let ezu    =( dopix_u           );           // [650]
                    let labinti=( d_file196_labinti );           // [650]
                    F_FILE196_EZU_LABINTI(                       // [650]
                              ezu,labinti );;                    // [650]
                                                                 // [650]
                    hastile =( labinti.m_hastile  );             // [650]
                    bintile =( labinti.m_bintile  );             // [650]
                    tar_la3 =( labinti.m_tar_la3  );             // [650]
                    //:------:#_DECODE_JOSH_PIXEL_#:[650]://     // [650]
                    //:#_PUT_JOSH_TILE_#:[650]:----------://     // [650]
                    if( hastile >= 1 ){                          // [650]
                                                                 // [650]
                        la3 =( tar_la3 );  //:TargetLayer://     // [650]
                                                                 // [650]
                        F_TILEBOI_API_PUT_U32(                   // [650]
                            h3x,h3y,r13  //:<--WhichRoom?://     // [650]
                        ,   te7,la3,     //:<--SIZ_A_LAY?://     // [650]
                        ,   rlx,rly      //:<--WhichTile?://     // [650]
                        ,   bintile      //:<--What_Data?://     // [650]
                        );;                                      // [650]
                    };;                                          // [650]
                    //:----------:#_PUT_JOSH_TILE_#:[650]://     // [650]


    ?_JOSHPIXEL_TO_JOSHTILE_? :-------------------------------+  // [650]
                                                              |  // [650]
        ?_JOSH_PIXEL_KEY_? :-------------------------------+  |  // [650]
                                                           |  |  // [650]
            Shades Of Red    : Classic Bombs (Jax Bombs)   |  |  // [650]
            Shades Of Green  : Geometry Tiles              |  |  // [650]
            Shades Of Blue   : Box Bombs                   |  |  // [650]
            Shades Of Cyan   : Spark Pins                  |  |  // [650]
            Shades Of Yellow : Laser Boxes                 |  |  // [650]
            Shades Of Magenta: Not Used At This Time.      |  |  // [650]
                                                           |  |  // [650]
        :-------------------------------: ?_JOSH_PIXEL_KEY_?  |  // [650]
        #_CREATE_JOSH_PIXEL_# :----------------------------+  |  // [650]
                                                           |  |  // [650]
            Extract the R,G,B,A bytes from                 |  |  // [650]
            [RGBA196/EASYHOT] and pack it into             |  |  // [650]
            a uint32 pixel value.                          |  |  // [650]
                                                           |  |  // [650]
            This pixel value is __NOT__ the binary         |  |  // [650]
            tile payload. It has to be filtered            |  |  // [650]
            using the PUREHUE based color key.             |  |  // [650]
                                                           |  |  // [650]
            SEE[ _JOSH_PIXEL_KEY_ ]                        |  |  // [650]
                                                           |  |  // [650]
        :--------------------------------------------------+  |  // [650]
        #_DECODE_JOSH_PIXEL_# :----------------------------+  |  // [650]
                                                           |  |  // [650]
            The UINT32 taken off of[ easyhot/rgba196 ]     |  |  // [650]
            is not the actual binary tile data.            |  |  // [650]
                                                           |  |  // [650]
            The (ezu)===>(labinti) function takes care     |  |  // [650]
            of the transformation from u32pixel on         |  |  // [650]
            RGBA196 to binary tile payload u32pixel.       |  |  // [650]
                                                           |  |  // [650]
            SEE[ _JOSH_PIXEL_KEY_ ]                        |  |  // [650]
                                                           |  |  // [650]
        :----------------------------: #_DECODE_JOSH_PIXEL_#  |  // [650]
                                                              |  // [650]
                                                              |  // [650]
    :-------------------------------: ?_JOSHPIXEL_TO_JOSHTILE_?  // [650]