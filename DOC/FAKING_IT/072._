





    compile_all_vertex_shaders :

                //: SEE[ #_OPENGL_VS_WEBGL_# ] ://              // [072]
                                                                // [072]
                typ = ASS( a_g.wgl.VERTEX_SHADER     );         // [072]
                ssv = ASS( a_g.arr_ssv[ i_r ]        );         // [072]
                vid = ASS( wgl.createShader( typ ) );           // [072]
                                                                // [072]
                wgl.shaderSource(    vid , ssv  );              // [072]
                wgl.compileShader(   vid        );              // [072]
                                                                // [072]
                msg = wgl.getShaderInfoLog(  vid  );            // [072]
                o_k = ( ( msg.length <= 0 ) ? 1 : 0 );          // [072]
                                                                // [072]
                if( 1 == o_k ){                                 // [072]
                                                                // [072]
                    a_g.arr_vid[ i_r ]=ASS( vid );              // [072]
                }else                                           // [072]
                if( 0 == o_k ){                                 // [072]
                    MSG("[BEG:ssv]\n\n");                       // [072]
                                                                // [072]
                    MSG( ssv );                                 // [072]
                                                                // [072]
                    MSG("[END:ssv]\n\n");                       // [072]
                    LOG( "[C_S:INFOLOG:V_S]" , msg );           // [072]
                    ERR( "[C_S:VERT_SHADER]"       );           // [072]
                }else{                                          // [072]
                    ERR("[WTFMAN:VERT]");                       // [072]
                };;                                             // [072]

    compile_all_fragment_shaders :

                //: SEE[ #_OPENGL_VS_WEBGL_# ] ://              // [072]
                                                                // [072]
                typ = ASS( a_g.wgl.FRAGMENT_SHADER   );         // [072]
                ssf = ASS( a_g.arr_ssf[ i_r ]        );         // [072]
                fid = ASS( wgl.createShader( typ )   );         // [072]
                                                                // [072]
                wgl.shaderSource(    fid , ssf  );              // [072]
                wgl.compileShader(   fid        );              // [072]
                                                                // [072]
                msg = wgl.getShaderInfoLog(  fid  );            // [072]
                o_k = ( ( msg.length <= 0 ) ? 1 : 0 );          // [072]
                                                                // [072]
                if( 1 == o_k ){                                 // [072]
                                                                // [072]
                    a_g.arr_fid[ i_r ]=ASS( fid );              // [072]
                }else                                           // [072]
                if( 0 == o_k ){                                 // [072]
                    MSG("[BEG:ssf]\n\n");                       // [072]
                                                                // [072]
                    MSG( ssf );                                 // [072]
                                                                // [072]
                    MSG("[END:ssf]\n\n");                       // [072]
                    LOG( "[C_S:INFOLOG:F_S]" , msg );           // [072]
                    ERR( "[C_S:FRAG_SHADER]"       );           // [072]
                }else{                                          // [072]
                    ERR("[WTFMAN:FRAG]");                       // [072]
                };;                                             // [072]

    create_all_shader_programs :

                pid = ASS( wgl.createProgram( ) );              // [072]
                a_g.arr_pid[ i_r ]=( pid );                     // [072]
                if( pid <= 0 ){ ERR("[BAD_PID]"); };            // [072]
                                                                // [072]
                                                                // [072]
                pid = ASS( a_g.arr_pid[ i_r ] );                // [072]
                vid = ASS( a_g.arr_vid[ i_r ] );                // [072]
                fid = ASS( a_g.arr_fid[ i_r ] );                // [072]
                                                                // [072]
                let ERR_CHK = F_ARTGIRL_ERR_CHK ;               // [072]
                                                                // [072]
                wgl.attachShader( pid ,             vid  );     // [072]
                wgl.attachShader( pid ,             fid  );     // [072]
                wgl.linkProgram(  pid );  ERR_CHK("[L_P]");     // [072]
                wgl.useProgram(   pid );  ERR_CHK("[U_P]");     // [072]
                                                                // [072]

    ERR_CHK :

        let a_g = d_artgirl     ;                               // [072]
        let wgl = d_artgirl.wgl ;                               // [072]
                                                                // [072]
        var err = wgl.getError( );                              // [072]
        if( wgl.NO_ERROR == err ){                              // [072]
                                                                // [072]
            LOG( "[ARTGIRL_ERR_CHK:O_K]" , i_tbm );             // [072]
        }else{                                                  // [072]
            LOG( "[ARTGILR_ERR_CHK:BAD]" , i_tbm );             // [072]
            ERR( "[TODO:Get_Error_Message]"      );             // [072]
        };;                                                     // [072]